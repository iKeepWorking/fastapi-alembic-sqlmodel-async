version: '3.8'

volumes:
  postgres_data:
    external:
      name: fastapi-alembic-sqlmodel-async

services:
  fastapi_server:
    container_name: fastapi_server
    build: ./fastapi-alembic-sqlmodel-async
    restart: always
    command: "sh -c 'alembic upgrade head && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'"
    volumes:
      - ./fastapi-alembic-sqlmodel-async:/code
    expose:
      - "8000"
    env_file: ".env"
    depends_on:
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi_local.entrypoints=web"
      - "traefik.http.routers.fastapi_local.rule=Host(`fastapi.${LOCAL_1}`, `fastapi.${LOCAL_2}`, `fastapi.${EXT_ENDPOINT1}`)"
      - traefik.http.services.fastapi_localservice.loadbalancer.server.port=8000
  
  database:
    image: postgres:14
    restart: always
    container_name: database
    env_file: ".env"
    user: root
    volumes:
      -   postgres_data:/var/lib/postgresql/data
    ports:
      - 15432:5432  # Remove this on production
    expose:
      - 5432
    environment:
      - POSTGRES_USERNAME=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_HOST_AUTH_METHOD= "trust"
      
  redis_server:
    container_name: redis_server
    image: "redis:7"
    restart: always
    expose:
      - "6379"
    env_file: .env

  nginx:
    container_name: nginx
    restart: unless-stopped
    logging:
      driver: none
    image: "nginx:latest"
    expose:
      - "8080"    
    volumes:
      - ./static:/code/static
      - ./nginx-config-files/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-config-files/app.nginx.template:/etc/nginx/templates/app.nginx.template
      - "${EB_LOG_BASE_DIR:-./nginx-config-files}/nginx-proxy:/var/log/nginx"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx_local.entrypoints=web"
      - "traefik.http.routers.nginx_local.rule=Host(`nginx.${LOCAL_1}`, `nginx.${LOCAL_2}`, `nginx.${EXT_ENDPOINT1}`)"
      - traefik.http.services.nginx_local_service.loadbalancer.server.port=8080

  traefik-proxy:
    container_name: traefik-proxy
    restart: always
    image: "traefik:2.8"
    command:
      - "--providers.docker=true"
    ports:
      - "8000:80"
    depends_on:      
      - fastapi_server
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/.htpasswd:/.htpasswd
      - "${EB_LOG_BASE_DIR:-./traefik}/traefik-proxy:/logs"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${LOCAL_1}`, `traefik.${LOCAL_2}`, `traefik.${EXT_ENDPOINT1}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/.htpasswd"
